Dataset not found , missing paths ['C:\\Users\\admin\\Desktop\\pytorch\\object_detection\\datasets\\coco128\\images\\train2017']
Downloading https://ultralytics.com/assets/coco128.zip to coco128.zip...
Traceback (most recent call last):
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\train.py", line 634, in <module>
    main(opt)
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\train.py", line 528, in main
    train(opt.hyp, opt, device, callbacks)
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\train.py", line 96, in train
    loggers = Loggers(save_dir, weights, opt, hyp, LOGGER)  # loggers instance
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\utils\loggers\__init__.py", line 111, in __init__
    self.wandb = WandbLogger(self.opt, run_id)
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\utils\loggers\wandb\wandb_utils.py", line 192, in __init__
    self.data_dict = check_wandb_dataset(opt.data)
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\utils\loggers\wandb\wandb_utils.py", line 59, in check_wandb_dataset
    return check_dataset(data_file)
  File "c:\Users\admin\Desktop\pytorch\object_detection\yolov5-7.0\utils\general.py", line 547, in check_dataset
    torch.hub.download_url_to_file(s, f)
  File "D:\deeplearning\miniconda\envs\d2l\lib\site-packages\torch\hub.py", line 457, in download_url_to_file
    u = urlopen(req)
  File "D:\deeplearning\miniconda\envs\d2l\lib\urllib\request.py", line 214, in urlopen
    return opener.open(url, data, timeout)
  File "D:\deeplearning\miniconda\envs\d2l\lib\urllib\request.py", line 517, in open
    response = self._open(req, data)
  File "D:\deeplearning\miniconda\envs\d2l\lib\urllib\request.py", line 539, in _open
    return self._call_chain(self.handle_open, 'unknown',
  File "D:\deeplearning\miniconda\envs\d2l\lib\urllib\request.py", line 494, in _call_chain
    result = func(*args)
  File "D:\deeplearning\miniconda\envs\d2l\lib\urllib\request.py", line 1417, in unknown_open
    raise URLError('unknown url type: %s' % type)
urllib.error.URLError: <urlopen error unknown url type: https>